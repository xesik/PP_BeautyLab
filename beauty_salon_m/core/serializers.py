from rest_framework import serializers
from .models import Post, Master, Service, ServiceCategory, User, Appointment


class PostSerializer(serializers.ModelSerializer):
    class Meta:
        model = Post
        fields = ['id', 'title', 'text']  # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å image, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

class MasterSerializer(serializers.ModelSerializer):
    class Meta:
        model = Master
        fields = ['id', 'name', 'rating', 'category']

class ServiceSerializer(serializers.ModelSerializer):
    class Meta:
        model = Service
        fields = ['id', 'name', 'price', 'service_cat']

class ServiceCategoryWithServicesSerializer(serializers.ModelSerializer):
    services = ServiceSerializer(source='service_set', many=True)

    class Meta:
        model = ServiceCategory
        fields = ['id', 'name', 'services']

class AppointmentCreateSerializer(serializers.Serializer):
    name = serializers.CharField()
    phone = serializers.CharField()
    comment = serializers.CharField(required=False, allow_blank=True)
    datetime = serializers.CharField()

    master = serializers.CharField()
    service = serializers.CharField()

    def create(self, validated_data):
        print("üßæ –î–∞–Ω–Ω—ã–µ, –ø—Ä–∏—à–µ–¥—à–∏–µ –≤ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä:", validated_data)
        print("üì• –°—ã—Ä—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", self.initial_data)
        # 1. –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞
        try:
            master = Master.objects.get(name=validated_data["master"])
        except Master.DoesNotExist:
            raise serializers.ValidationError({"master": "–ú–∞—Å—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"})

        # 2. –ù–∞–π—Ç–∏ —É—Å–ª—É–≥—É
        try:
            service = Service.objects.get(name=validated_data["service"])
        except Service.DoesNotExist:
            raise serializers.ValidationError({"service": "–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"})

        # 3. –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user, _ = User.objects.get_or_create(
            login=validated_data["phone"],
            defaults={
                "name": validated_data["name"],
                "phone": validated_data["phone"],
                "role": "client",
            },
        )

        # 4. –†–∞–∑–æ–±—Ä–∞—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        try:
            date_str, time_str = validated_data["datetime"].split()
        except ValueError:
            raise serializers.ValidationError({"datetime": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: –æ–∂–∏–¥–∞–ª–æ—Å—å 'YYYY-MM-DD HH:MM'"})

        # 5. –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å
        return Appointment.objects.create(
            user=user,
            master=master,
            service=service,
            appointment_date=date_str,
            appointment_time=time_str,
        )

class SlotSerializer(serializers.Serializer):
    id = serializers.IntegerField(required=False)
    name = serializers.CharField(max_length=255)
    phone = serializers.CharField(max_length=20)
    date = serializers.DateField()
    time = serializers.TimeField()
    master_id = serializers.IntegerField()
    service_id = serializers.IntegerField()